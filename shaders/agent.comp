#version 460 core

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(rgba32f, binding = 0) uniform image2D image;
layout(std430, binding = 1) buffer agentPositionsBuffer { vec2 agentPositions[]; };
layout(std430, binding = 2) buffer agentDirectionsBuffer { vec2 agentDirections[]; };

uniform float agentSpeed;

void main() {
	int index = int(gl_GlobalInvocationID);

	vec2 agentPosition = agentPositions[index].xy;
	vec2 agentDirection = agentDirections[index].xy;

	agentPositions[index].xy = agentPosition + agentDirection * agentSpeed;


	// ---------- drawing logic ----------
	// check that current shader's pixel is in vicinity of an agent
	// vec2 dims = vec2(imageSize(image));

	// vec4 color = vec4(1.0, 1.0, 1.0, 1.0);

	// ivec2 pixelCoords = ivec2(agentPosition * dims);
	// imageStore(image, pixelCoords, color);
}